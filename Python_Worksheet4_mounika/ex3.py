"""Create a base class, CDataProcessor with two properties - samples and features - and a method PrintDatasetInfo(). The two properties are initialized using the number of rows and columns of a Pandas dataframe that is passed to the constructor during object creation. The PrintDatasetInfo() method should print the number of samples and features.

Derive a new class, CCSVProcessor from the CDataProcessor class. This derived class should have two properties - filename and dfData - The filename is initialized to path of the CSV file specified during object createion. The dfData is initialized to empty dataframe. The CCSVProcessor class should contain two methods - LoadData() and ConvertToJSON() - LoadData should load the CSV data into a dfData property of this class (use Pandas read_csv method). It should also invoke its parent class __init__ method passing the dfData, so that, parent’s samples and features are populated correctly.   ConvertToJSON() should create a new JSON file using the dfData (use Pandas to_json method)

Derive a new class, CJSONProcessor from the CDataProcessor class. This derived class should have two properties - filename and dfData - The filename is initialized to path of the JSON file specified during object createion. The dfData is initialized to empty dataframe. The CJSONProcessor class should contain a method - LoadData() - LoadData should load the JSON data into a dfData property of this class (use Pandas read_json method). It should also invoke its parent class __init__ method passing the dfData, so that, parent’s samples and features are populated correctly.

Create an object of CCSVProcessor using the file titanic.csv. Load the data and invoke PrintDatasetInfo() to print the number of samples and features in this dataset.
Create an object of CCSVProcessor using the file ODI-Batting_Cricket_Analytics.csv. This file is copied in my Google drive code folder.  Load the data and invoke ConvertToJSON() method to create a new ODI-Batting_Cricket_Analytics.JSON file.
Create an object of CJSONProcessor(), load the data and invoke PrintDatasetInfo() to print the number of features and columns of this dataset.
"""